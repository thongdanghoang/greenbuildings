{
  "id": "e386f887-3e8d-429f-988b-8f6aa10c9e0f",
  "realm": "greenbuildings",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": true,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "15137486-5601-442a-87ae-807ab5b54156",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "e386f887-3e8d-429f-988b-8f6aa10c9e0f",
        "attributes": {}
      },
      {
        "id": "e78f3544-4ba0-4258-96b6-92d23fa585b6",
        "name": "default-roles-greenbuildings",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ]
        },
        "clientRole": false,
        "containerId": "e386f887-3e8d-429f-988b-8f6aa10c9e0f",
        "attributes": {}
      },
      {
        "id": "0301dabe-57fa-43cd-ad9f-45d11ccfe4ab",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "e386f887-3e8d-429f-988b-8f6aa10c9e0f",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "4645419a-9ff0-4810-9d1a-3e984db4473d",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0fdda0a-1a74-4bad-9b6b-12a099afdb67",
          "attributes": {}
        },
        {
          "id": "e344d37d-b9a1-4488-93c7-502d0cb1d943",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0fdda0a-1a74-4bad-9b6b-12a099afdb67",
          "attributes": {}
        },
        {
          "id": "a25e0205-d755-4a2c-b1d4-3d31c6ebe6e8",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0fdda0a-1a74-4bad-9b6b-12a099afdb67",
          "attributes": {}
        },
        {
          "id": "d28d7d58-ca9c-4e84-91ee-2eb8c8ff0e61",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0fdda0a-1a74-4bad-9b6b-12a099afdb67",
          "attributes": {}
        },
        {
          "id": "f57a848f-1269-46e1-8d28-cf9ed311fa8a",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0fdda0a-1a74-4bad-9b6b-12a099afdb67",
          "attributes": {}
        },
        {
          "id": "b5e13809-024e-43f2-abc6-db64f0289b07",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0fdda0a-1a74-4bad-9b6b-12a099afdb67",
          "attributes": {}
        },
        {
          "id": "85ea0232-3ac6-43c6-9f5a-12bec212112a",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0fdda0a-1a74-4bad-9b6b-12a099afdb67",
          "attributes": {}
        },
        {
          "id": "df8e7373-6802-4136-9aad-a1c2262537c1",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0fdda0a-1a74-4bad-9b6b-12a099afdb67",
          "attributes": {}
        },
        {
          "id": "9a2b25de-9055-49a2-93e7-f753b5eced14",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0fdda0a-1a74-4bad-9b6b-12a099afdb67",
          "attributes": {}
        },
        {
          "id": "5411b2c2-40bf-46f3-8524-94ec7f7a443d",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0fdda0a-1a74-4bad-9b6b-12a099afdb67",
          "attributes": {}
        },
        {
          "id": "065c655d-7756-49b3-90a0-d92d0ab73fd0",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "b0fdda0a-1a74-4bad-9b6b-12a099afdb67",
          "attributes": {}
        },
        {
          "id": "76b16dbc-4f34-4d40-a54d-f30117392bd2",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0fdda0a-1a74-4bad-9b6b-12a099afdb67",
          "attributes": {}
        },
        {
          "id": "42597b5c-4ffe-4d30-be4f-f074cc2a602d",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0fdda0a-1a74-4bad-9b6b-12a099afdb67",
          "attributes": {}
        },
        {
          "id": "5beea011-f821-4464-bf25-be6480d9bf0e",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0fdda0a-1a74-4bad-9b6b-12a099afdb67",
          "attributes": {}
        },
        {
          "id": "00d86f0a-f1a0-4d8a-b81f-386bdbba9d8b",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "b0fdda0a-1a74-4bad-9b6b-12a099afdb67",
          "attributes": {}
        },
        {
          "id": "f61e050c-515e-4fbc-ada3-af561eb04cea",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-realms",
                "view-realm",
                "manage-users",
                "view-identity-providers",
                "view-events",
                "manage-clients",
                "manage-authorization",
                "query-groups",
                "manage-realm",
                "query-users",
                "view-users",
                "view-authorization",
                "create-client",
                "manage-events",
                "view-clients",
                "manage-identity-providers",
                "impersonation",
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "b0fdda0a-1a74-4bad-9b6b-12a099afdb67",
          "attributes": {}
        },
        {
          "id": "20a120a2-3002-400a-8d25-e01f43d83308",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0fdda0a-1a74-4bad-9b6b-12a099afdb67",
          "attributes": {}
        },
        {
          "id": "27e8a26d-777d-4043-8fee-ef5a51b1f276",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0fdda0a-1a74-4bad-9b6b-12a099afdb67",
          "attributes": {}
        },
        {
          "id": "66b5af6e-1b74-4f0a-a250-4a212bc12690",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0fdda0a-1a74-4bad-9b6b-12a099afdb67",
          "attributes": {}
        }
      ],
      "testcontainer": [],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [],
      "account": [
        {
          "id": "d2a68a7a-1c37-4865-bac1-40a2b5d2252c",
          "name": "manage-account",
          "composite": false,
          "clientRole": true,
          "containerId": "30d282bb-62f0-4e1b-bf70-2e5ff4d5fce5",
          "attributes": {}
        },
        {
          "id": "8d3ff370-ce71-4e4e-b27e-e0d4268af523",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "30d282bb-62f0-4e1b-bf70-2e5ff4d5fce5",
          "attributes": {}
        },
        {
          "id": "f3a018a2-f0ec-4be0-8b6e-f15e6a49b096",
          "name": "view-groups",
          "composite": false,
          "clientRole": true,
          "containerId": "30d282bb-62f0-4e1b-bf70-2e5ff4d5fce5",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "e78f3544-4ba0-4258-96b6-92d23fa585b6",
    "name": "default-roles-greenbuildings",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "e386f887-3e8d-429f-988b-8f6aa10c9e0f"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "521e06fe-627b-4667-a4da-70b17880490f",
      "username": "enterprise.employee@greenbuildings.com",
      "firstName": "Thống",
      "lastName": "ĐẶNG HOÀNG",
      "email": "enterprise.employee@greenbuildings.com",
      "emailVerified": true,
      "createdTimestamp": 1739465882859,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "9ada903f-d498-4f62-8b9f-49dc0e5e3d5b",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1739465887990,
          "secretData": "{\"value\":\"rxhPXrsDJ6dhSJYUlp3b3KrA117V00j2bo8wLFVOBXWUvKUGj5u9fUhAZGKpMfZHlR6a/tehbF3Svd1klCFnjQ==\",\"salt\":\"lMBf3/6zuhjZqWzHbqekGg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-greenbuildings"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "10b25146-709b-4bef-a6b9-65245423673a",
      "username": "enterprise.owner@greenbuildings.com",
      "firstName": "Ngân",
      "lastName": "Nguyễn Thục",
      "email": "enterprise.owner@greenbuildings.com",
      "emailVerified": true,
      "createdTimestamp": 1739465937319,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "0b1dd62f-8f17-496c-9695-6b2d5e6549b7",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1739465942412,
          "secretData": "{\"value\":\"rkfm9T+2m2Krahj27KMT8OesW7fNJ2J+5WB3vd9SDi3ofWm1ZGysoel/0EPZo534bLZO/winD1rFJ7iPp3vEww==\",\"salt\":\"x7SxcabRy0nnr2jvvAso1A==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-greenbuildings"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "9995f201-512a-4f80-8dfa-a0638bfd32ae",
      "username": "system.admin@greenbuildings.com",
      "firstName": "Bảo",
      "lastName": "TRẦN GIA",
      "email": "system.admin@greenbuildings.com",
      "emailVerified": true,
      "createdTimestamp": 1739465958479,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "c2ac9d78-1220-48da-801c-4d2a4febac3a",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1739465964565,
          "secretData": "{\"value\":\"gPcP1+LgOCn9+8X9eYnE/vLN6w/8xdajqCqattKiYWpcCgSnfSFXmx3wfDlUXRXUJBTWztvzgw3PRhfHGs8Qbw==\",\"salt\":\"X7j95vo05uPqkpaifLnqYw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-greenbuildings"
      ],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "30d282bb-62f0-4e1b-bf70-2e5ff4d5fce5",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/greenbuildings/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/greenbuildings/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b1cd0b06-e0e3-434d-ab80-dd3ceb431752",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/greenbuildings/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/greenbuildings/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "f3c67e45-d18b-4826-8d8f-65f78853ed09",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "86483d75-ceff-41c8-854a-c75e168652c5",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "3a764502-17de-422d-b8a9-3ff71a69866b",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b0fdda0a-1a74-4bad-9b6b-12a099afdb67",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "30e96ea7-a196-48d9-adbc-4efbf959969b",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/greenbuildings/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/greenbuildings/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "3627dffd-8000-4bbd-8f3e-1dbba03b9929",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2dfc5ad3-6e79-4aab-896f-ecd559724877",
      "clientId": "testcontainer",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [
        "/*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "testcontainer",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "f45ba560-a6af-448c-aa23-9b9291fc1efe",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "e04c767c-0534-4ace-97c6-6d5b2c5e697b",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "33de3614-7ad2-491e-b2a5-7a008218f13d",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "39eb7f10-d648-4b1a-b1c7-6a369d13e3fd",
      "name": "testcontainer",
      "description": "",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "gui.order": "",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "f2adbd90-8fb7-45a6-80f8-c72b7eebe173",
          "name": "testcontainer",
          "protocol": "openid-connect",
          "protocolMapper": "green-buildings-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "f8e4e7c2-2f53-4506-af90-6da9c12577ac",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "401b3749-5133-4514-8bbe-f328bd05a90f",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ef45d929-e967-4767-9bce-a89859bdcdbc",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "id": "2fdc9eb1-dafd-4208-ba38-de2623cfbd11",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "80c4e77b-b2d9-42e1-8b36-5739920d2a74",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "ae0cb58c-cd67-4a31-a09d-33ba3f2fa2ab",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "5b35c782-85c7-40f8-afbd-e1cb1a3628c1",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "59147233-5da2-49ec-83f9-3bce956d41f1",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "6932ac55-5b7c-4410-986b-ba89c29e23a2",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ff953ed1-8187-43dd-b3e7-e947cb253a7b",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "bdc411d8-cee3-43d2-b55c-60b78550b66b",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "236c28be-d009-43f5-af5f-b355b115b459",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "2177506b-173e-4df7-a987-b11cfd410f59",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "66ed8d79-1ebc-4864-95ad-5f4f069ded38",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "dd03cef7-65b4-4783-871a-92ccbfafdec2",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "58e43ceb-7310-4596-afd4-b6695c19a9ea",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4781c0ef-a0ea-49c9-970a-da60cc88f6d7",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0880d8e0-eded-4449-b4ab-5e3ab158a500",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2ef715a9-33e6-40ef-879a-646dbc94ee72",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4ca34edd-dd51-4ecb-9c7a-16ec3fcbed7c",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4b3e0325-10d6-433b-ba21-4bc62eeea9ec",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3f1eaf6d-a17a-403c-9cf5-3053a1866471",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9ca533f3-c474-4338-95f6-84d5c459406f",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "92c55b7c-f1b5-49c8-9fea-072f9e25472b",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "06db94d3-dbc4-403b-a31f-cf262e1a0fb5",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4cd1c610-d872-4c6f-84fa-effbd56038e5",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "7705e7ce-436d-47a1-864a-33f051271840",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bee72ba3-9f40-4990-ab3a-acb73c199c60",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b762f1af-dfbf-42aa-a68d-906f475cd0a8",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "11fd7713-9254-45dc-abb1-eb2cfdab9d9a",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "4e26a7be-6287-46a0-940a-1cf521bf0d6b",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "59caa4c4-f898-47f5-b982-870c589d493d",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "81c40fd8-fb18-4e10-a826-e797a0dd7ecb",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2f1ebc03-6595-4ab2-80b8-5736dfb6c460",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "c90a14aa-35ae-4d1a-b157-5b71948690bb",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "62095690-0c17-4f07-a6dd-c0cfffe6dc84",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "efd4b2d5-6233-46d9-bfc1-2be10ae7e46d",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "557e4900-0acb-4d2a-b0e7-813bdca1797a",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "de81c928-12e4-46b3-a1d7-e067581a92b7",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper"
          ]
        }
      },
      {
        "id": "4c610f77-cfa6-4654-a794-df738d32c71d",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "fc956ba2-1369-46b1-818c-56dd49889496",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-role-list-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper"
          ]
        }
      },
      {
        "id": "2a0979c4-9ef9-43f9-9ade-b2a824dad4f1",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "b7d56823-1235-4df7-812c-995993c44843",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "4b6cef36-a67b-4ba0-9adc-ad4fa33a09c0"
          ],
          "secret": [
            "H2bmivKkWi5KS0d2E4Q2_w"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "576a069c-beca-4364-b7b7-7e7056e7c455",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "eb5949c6-1790-4d69-aa21-c1aafb24c1e1"
          ],
          "secret": [
            "9DsZ8aVfCDJ9d9WJv2srZFYxBnOIfnEIhOkPqHAupVifDq1JZgnQ2S6r6cOyhZ-q8IIfAAz7eQ0knAgng7kZYp-Hl1DZp6VfwPvBmXBlcP_F3Plc9WxeUgUdda2pMVe7KrCvxMA5XzXAQhYToQM7bmoek3EOqLm1NOEArrBm2ck"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS512"
          ]
        }
      },
      {
        "id": "acd24221-b58d-4381-bef4-aa747f37dad9",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEApSH1QecaPxJtGW6TxDBrcj1UNTizQI0PyIHT0j4XbVecHLTdhdqau5JYjmerQ6IeJUQE9PHtLJVhiEBuJ7MuxEkQUOAEygIf540bcUIYrmoxrpmJLE3pqjd6JPzbLSMOdlWqpNin0C9b1SfWJXxSa87Mb7Z0QKHnw6G/VrnBOB8YU+VaJeswPxDvJPA/YxljCnMD1BGrIF+OOYifJhmJmx3oLfO0FwmCSz7gHro9G0vBZsnbSbR74yxFzzGfzv1Jl0evgulP9RbjMcutjXMRhfAqEnDUAVvbv2S8alotuOkUcDsTKrlXWlHhyy3sLuh/MKMKPf9gWw0x0OTcwKKKbwIDAQABAoIBACP0Ec8ofxlubJyV68xScoJsAfKYhsauL9qLEdB7vmQLKC1D39tt7jSat3dB8RMHsCKS/bVLG0WSvKqKxLEWHT+VXN0O+Vv2PHYQzgHJz0/iRTDrsucXi6GI9Koq95mLQXHYUxATL+5u8UKmqsR8ngFlBDPqeMM9vRVmGR/Lz9rk6Kerr+1zRLCjHRZeegBSV09QKnd6uwSLq08dp0UNNXoSSqaEk9pCuJNAZvc469iPlZ/BviJh33+ZRGvgT1JaVvUlXE7gYKdSBmRrXEOffQORp8iXINQb6HD0Tvd/llDSoJMjMToOZQ1tddo3ukAnCLG7j3nnSH+cNMLXobsXFwkCgYEA16jIo7+4SvJz3BgJZ+Wh7Fu5nDhHXD7iVAPz68DWankjWy+e4SzJ0urWmZXfEBlmZkSjn8AKZ6rT43QaQiMZvOiTMFhruGLvVYSuYdXEdZedDJwJRgkbk9dacnePbkOHxwp5roQLUVX1VOFsSSVYlIJ5gQQ20k+/pKZSBmpsgzUCgYEAxAWeSh90N2GJSlqTezSMXxioQdAxPp8PLhEt5FgH9e9oPzkDIcTCfusgohy1u1MbaKw3dTc+SqmcZexrCgTGTNb1fSJnpAcCi9sw+5NNW4WSuj6S3+JQYcw33EK6I0rzXumAFNhY5DzCQL3O+f/ecnrYsLAE1FIoPtXHBG6hx5MCgYEAoC3QILfUxW4BmhcMXWwU8b5LRXoTnrNiXa617IRFfb3OAfuD0ZH3sb4VeOv1SzricNFIiu4TjF44lTd2DWuOwV4pfP4fvEtXorgy4Z3qFsFut5/pz2gSYKPSnTSqhuaHodHpATM4SMhEuS/ZwxaHDX8/ihE8Osda+4tBX1yKjoUCgYEAjWpAN9lZTlrfYPTXURsn6bMwL8qyvCqkGOfr48Befd6ppnLK/6Gjb0zRziJIOUxLicg0eivQlKyoWB+nWSL4rJanpA8eFge4no0TWWt7c3t5z0M1Uq9CrktWQWEiSDPaP67U6DTsbDwpJ+vHVjRxlsVpbo6N7V8YCbzQRzJJJGECgYAyirrjlDZBBKpNvT5xfKULKWMXw6ARMDy9j4ncClKn4e32rfSPAulk2TEQA1cm41iGvsLJUZUyxLf0LSQdHqZhJlcoiHJXWwQCFDhAtAsB+j2OqJ8NL6LCDz5ezvR8pM/4tKeZhkJM9GGi7kno5JIGYUb0rsAl7on9mNzGBaknvA=="
          ],
          "certificate": [
            "MIICqzCCAZMCBgGVAD6oZTANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDDA5ncmVlbmJ1aWxkaW5nczAeFw0yNTAyMTMxNjU2MDFaFw0zNTAyMTMxNjU3NDFaMBkxFzAVBgNVBAMMDmdyZWVuYnVpbGRpbmdzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApSH1QecaPxJtGW6TxDBrcj1UNTizQI0PyIHT0j4XbVecHLTdhdqau5JYjmerQ6IeJUQE9PHtLJVhiEBuJ7MuxEkQUOAEygIf540bcUIYrmoxrpmJLE3pqjd6JPzbLSMOdlWqpNin0C9b1SfWJXxSa87Mb7Z0QKHnw6G/VrnBOB8YU+VaJeswPxDvJPA/YxljCnMD1BGrIF+OOYifJhmJmx3oLfO0FwmCSz7gHro9G0vBZsnbSbR74yxFzzGfzv1Jl0evgulP9RbjMcutjXMRhfAqEnDUAVvbv2S8alotuOkUcDsTKrlXWlHhyy3sLuh/MKMKPf9gWw0x0OTcwKKKbwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQAzTlFZhL1Z70rEeHcnI62luW7JP1Asn5Crh3BEFwxlVYjVweX7M1NwduskNP0Rs7BuLOiFMU+pjqKkVYam3b0J6bLYoUNljpWufyBgQtbvE8f5+R1+J2ji+DIVkjPLukYHDlZ8NNwgDOxVOQ/pwCdrTC3pW5i0SRqHtjhvnDaSjBeM9UH1Rg62scz0FUwcBFihjQxwmIJHgwXPwMADVb/MlFCPgsByHvwKY1FKKKtwQyueChHHdl3cH/Yqb2S1I3zibmSnkcmW+yoNGYBjP/tn1g2yI1XfYiOww7kj3wsvwInb3KQamtUbbQqEPg89Ii4iEgKltN7yB3t2Q8Efh3S6"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "0852e57a-6a7b-4430-a346-479660d74dad",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEoQIBAAKCAQEAiEmE3sRS5mN2NcVh6k9qG49N/va7z0vQT2PEh23dahQvGQjqHcA9AMQAAdQjjaCcJbT1vDf6qAb2Yn852ulTTDPAPBhsKyRYk9QOvZ6hiVF75TYaihvQXq0kSPKz+u8QHUs8EW69VTGjMXA9Quk0voqTMy/GW2pYxbbW7tEZYD3AlKyPhtQ/6Z+RsIUmtfumR4KPSStF3yCw1T+0cgdHOgkfWkc0LO7qUqYDyouvc97XZlLnSNIvptZCSkbmzZVKkJt4IM6h+vJI9TyFjOVTd/aqi5XRD32ggNgcHqu7qoI8LmoNy1Y2y3FiEWFd5wWriugDZFIw+b9qpzS5zY+SjwIDAQABAoH/dbLb4HvYrPKzLyEP6SmhNpszJNyi0BW/mT+8m6hRK1acHnIO31/jONEtn7SVbxOTmggG4un65+oQQpDVGER/MRh1OgzolWSs19yveh4V0s9ftda13Sv7m1jKpEt7v56f0aGL8NAWcCPHGgFaNKaWVctXVKW2F8I6jyFNL6Qty6vW+qM0GN63Rm6u9rlRMv8FnvrMb8tlp+q8lJrZYEl4tYhmlmrS6ADwUhBiJgVH9R5mz1pYBlIl0u5ZzSV85QSuQ/eBFvSaFPtXN+0JKWaBlKqQe51bIKGbF1iqbE1nsSMQ6AYPXSAqmPeHrLIRum997rV9c0gGCFx8fw3ckmhJAoGBAL275H9qJa/u1FBg/T2+O5Kcl/gFu7M/dBSjS0QrPWjQBRMo7ZhsMMehBECDxDaglWPBNEYoyDDgEj0FvaD+J+3IClxrOeJOZLrqft8QsqmcTTwR5roJE4jtM+2EV/TpcMyYQ7PyPDIAyePAWem6kefwAcP9TCzvBWmWcWG046gdAoGBALfi88BsI/rkxd2sjF4OftOR19SA0srKJ0wgMM6kuWGdkC3ieFhrqNFqV2UWlcnN1wGlzoE5C6iFLT0oUlB8bYBzcLOVIWo/PALpGrGpJ1Ff98zmOFA2aDxyq8NveJNcAQB6J7/MpyyIGJHcxmdZOlFzmYmTim0Mch2swgYD652bAoGBAJrgmogrpLH1edhXI8FX3RczvpWWUH7kaCREm7b8uPcq/0mBmllWz4bVeDwVk4CoGupAFyTCO5AyCJFJc17MuNlP9q00Vh7WsUEnFAOQhNcRILbNQhNQP2MBheb3pjjkqdBI5tMoBF0o6aSBKqQxSNMUxswuoxT20+s6BDmmyEM9AoGAbRXnf/knBwl8D9rykkGLHztfjCK36bEuysw16AB0MOJly7KTrfB//2tUWRWi2kqQB9wyuxn6Pohyo9stqa2G0DKrYv1PC1Zj5V4fhdFRD8ccm6LfOUZtY56rIo8YOmLT/VJ6Dh/79EDwQmd0E48tN3CaXrD152cAs3Xuy967gY0CgYApE8CnyXKoLMu5egM1onltTORnt9Y5zYhu6vn3r+NUk867vSQfeVL1yuU7qYkewVcyqHVHhCbtUR/C1DWomtuTIlkKdsTTmKmMmISwi71QxvusTvLk5ArNcAqjXPmoHDR+4y+4I4gcvlvkIx87Nh4vCiVKE61/I0z4gn2FVKTCNw=="
          ],
          "certificate": [
            "MIICqzCCAZMCBgGVAD6pFzANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDDA5ncmVlbmJ1aWxkaW5nczAeFw0yNTAyMTMxNjU2MDFaFw0zNTAyMTMxNjU3NDFaMBkxFzAVBgNVBAMMDmdyZWVuYnVpbGRpbmdzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiEmE3sRS5mN2NcVh6k9qG49N/va7z0vQT2PEh23dahQvGQjqHcA9AMQAAdQjjaCcJbT1vDf6qAb2Yn852ulTTDPAPBhsKyRYk9QOvZ6hiVF75TYaihvQXq0kSPKz+u8QHUs8EW69VTGjMXA9Quk0voqTMy/GW2pYxbbW7tEZYD3AlKyPhtQ/6Z+RsIUmtfumR4KPSStF3yCw1T+0cgdHOgkfWkc0LO7qUqYDyouvc97XZlLnSNIvptZCSkbmzZVKkJt4IM6h+vJI9TyFjOVTd/aqi5XRD32ggNgcHqu7qoI8LmoNy1Y2y3FiEWFd5wWriugDZFIw+b9qpzS5zY+SjwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQA6zP2C5b34ILKXecDUuhO0JHa0V7fJzfWZuoqQcu+g+6U/FMrjxoh2RWi3ABIloDolws9Rt3K2Iwx1hB5924gH9owHCsqhm6GcUjDvZtEIQYne1MTMTYHJ/3jAmNzXxO2LGhxOoNU+eLrX1P92TRqDA+xdxWYmEZ5AOe5YIkn1c3fK8l/OVOJQo4NkeequioAmqnGp78pL0XJT5meKHAo2cs/JQMkXZscpSuqNYYmx8eh552H0cvPHMdhhlTM/ozzMfiAEsq1TC7zJ/PLG/+VtwyC/ivom7JRQ1KImnrVEf1TrHGw8YbQgd0wn30ubkCglS1ek6RmT1L+9EEhXrM5t"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "d55c8e67-e42d-4974-a46a-af45918eae9b",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ebd6fdf5-3802-4651-a272-07d90e9308e7",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f7045e7a-dac3-4164-86d0-d7e26d624243",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "30d47983-9fb3-403b-8a6f-46697a3a5132",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "46347ee9-0725-4c15-a67e-be8331656df2",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c1402658-5971-4a6e-9633-7afc008159c5",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2a244c71-fa88-4494-bc05-e7aafb7eed96",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1b70329b-6d00-48b4-9b24-ff09fee8cb4b",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "922db710-f606-4afc-ae5a-2b1e3dea0301",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8e47363a-99f5-42c2-b848-baafda59cdb8",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d6a63cfd-9624-492c-a122-f42d1c32d744",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3f224f0b-c6d3-46e2-9f74-e884dea6cb6e",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "aa3f2e6c-51fc-46ae-a0b5-0a4c7655d6ec",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9dbfdd16-375f-4de0-815c-196dec866aad",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b74672e1-f432-48fe-a78e-747b8085cc62",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0d8e09ad-427b-47e5-a45c-7aa86998bdcc",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9eb9efe3-66d4-4ecc-b25c-9d8eed97faf2",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c5c4d720-3dc0-48a0-ab4c-6e098d61d127",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "fb7ba9e1-61b0-4750-a51a-b4d5c9e33de6",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "3edd4672-16f4-49dc-88b8-cf0874bd5c37",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "24.0.5",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}