server:
  servlet:
    context-path: /idp
  tomcat:
    remoteip:
      remote-ip-header: "x-forwarded-for"
      protocol-header: "x-forwarded-proto"

spring:
  security:
    cors:
      allowed:
        origins: ${CORS_ALLOWED_ORIGINS}
    passkeys:
      rpName: ${PASSKEYS_RP_NAME}
      rpId: ${PASSKEYS_RP_ID}
      allowedOrigins: ${PASSKEYS_ALLOWED_ORIGINS}
    oauth2:
      authorizationserver:
        client:
          oidc-client:
            registration:
              client-id: ${OIDC_CLIENT_ID}
              client-authentication-methods:
                - "none"
              authorization-grant-types:
                - "authorization_code"
              redirect-uris: ${OIDC_REDIRECT_URI}
              post-logout-redirect-uris: ${OIDC_POST_LOGOUT_REDIRECT_URI}
              scopes:
                - openid
                - email
                - phone
            require-proof-key: true
            token:
              access-token-time-to-live: PT1H
  mail:
    host: ${SMTP_HOST}
    port: ${SMTP_PORT}
    username:
    password:
    properties:
      mail.smtp.starttls.enable: true
      mail.smtp.auth: false
  application:
    name: greenbuildings-idp
    homepage: http://localhost:4200
#    TODO : hard code ?
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}?serverTimezone=UTC
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  flyway:
    output-query-results: false
    create-schemas: false
  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
      ddl-auto: validate
    open-in-view: false
    properties:
      hibernate:
        show_sql: false
        format_sql: false
        query:
          fail_on_pagination_over_collection_fetch: true
  kafka:
    admin:
      fail-fast: true
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
      auto-offset-reset: latest
      group-id: greenbuildings-idp

logging:
  level:
    root: INFO
    org:
      springframework:
        web: WARN
        security: WARN
      hibernate: WARN
    greenbuildings: DEBUG
